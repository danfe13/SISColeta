package br.ufs.coleta.SISColeta.entities;

// Generated 25/01/2015 11:00:24 by Hibernate Tools 4.3.1

import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * TbColecao generated by hbm2java
 */
@Entity
@Table(name = "tb_colecao", schema = "public")
public class Colecao implements GenericEntity {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private Integer id;
	private Coleta coleta;
	private Especie especie;
	private Usuario usuario;
	private Integer quantidade;
	private Integer unidade;
	private Integer destinacao;
	private String observacao;
	private Set<RetiradaColecao> retiradaColecaos = new HashSet<RetiradaColecao>(
			0);
	private Set<ColecaoImagem> colecaoImagems = new HashSet<ColecaoImagem>(
			0);

	public Colecao() {
	}

	public Colecao(int idtbColecao, Coleta coleta, Especie especie,
			Usuario usuario) {
		this.id = idtbColecao;
		this.coleta = coleta;
		this.especie = especie;
		this.usuario = usuario;
	}

	public Colecao(int idtbColecao, Coleta coleta, Especie especie,
			Usuario usuario, Integer quantidade, Integer unidade,
			Integer destinacao, String observacao,
			Set<RetiradaColecao> retiradaColecaos,
			Set<ColecaoImagem> colecaoImagems) {
		this.id = idtbColecao;
		this.coleta = coleta;
		this.especie = especie;
		this.usuario = usuario;
		this.quantidade = quantidade;
		this.unidade = unidade;
		this.destinacao = destinacao;
		this.observacao = observacao;
		this.retiradaColecaos = retiradaColecaos;
		this.colecaoImagems = colecaoImagems;
	}

	@Id
	@Column(name = "idtb_colecao", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "tb_coleta_id", nullable = false)
	public Coleta getTbColeta() {
		return this.coleta;
	}

	public void setTbColeta(Coleta coleta) {
		this.coleta = coleta;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "tb_especie_id", nullable = false)
	public Especie getTbEspecie() {
		return this.especie;
	}

	public void setTbEspecie(Especie especie) {
		this.especie = especie;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "tb_usuario_id", nullable = false)
	public Usuario getTbUsuario() {
		return this.usuario;
	}

	public void setTbUsuario(Usuario usuario) {
		this.usuario = usuario;
	}

	@Column(name = "quantidade")
	public Integer getQuantidade() {
		return this.quantidade;
	}

	public void setQuantidade(Integer quantidade) {
		this.quantidade = quantidade;
	}

	@Column(name = "unidade")
	public Integer getUnidade() {
		return this.unidade;
	}

	public void setUnidade(Integer unidade) {
		this.unidade = unidade;
	}

	@Column(name = "destinacao")
	public Integer getDestinacao() {
		return this.destinacao;
	}

	public void setDestinacao(Integer destinacao) {
		this.destinacao = destinacao;
	}

	@Column(name = "observacao")
	public String getObservacao() {
		return this.observacao;
	}

	public void setObservacao(String observacao) {
		this.observacao = observacao;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "tbColecao")
	public Set<RetiradaColecao> getTbRetiradaColecaos() {
		return this.retiradaColecaos;
	}

	public void setTbRetiradaColecaos(Set<RetiradaColecao> retiradaColecaos) {
		this.retiradaColecaos = retiradaColecaos;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "tbColecao")
	public Set<ColecaoImagem> getTbColecaoImagems() {
		return this.colecaoImagems;
	}

	public void setTbColecaoImagems(Set<ColecaoImagem> colecaoImagems) {
		this.colecaoImagems = colecaoImagems;
	}
	
	@Override
    public int hashCode() {
        int hash = 0;
        hash += (id != null ? id.hashCode() : 0);
        return hash;
    }

    @Override
    public boolean equals(Object object) {
        // TODO: Warning - this method won't work in the case the id fields are not set
        if (!(object instanceof Colecao)) {
            return false;
        }
        Colecao other = (Colecao) object;
        if ((this.id == null && other.id != null) || (this.id != null && !this.id.equals(other.id))) {
            return false;
        }
        return true;
    }

}
