package br.ufs.coleta.SISColeta.entities;

// Generated Jul 24, 2015 11:11:15 AM by Hibernate Tools 4.3.1

import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.Table;
import javax.validation.constraints.NotNull;

import org.hibernate.validator.constraints.NotEmpty;

/**
 * TbCaracRio generated by hbm2java
 */
@Entity
@Table(name = "tb_carac_rio", schema = "public")
public class CaracRio implements GenericEntity {

	private static final long serialVersionUID = 1L;
	private Integer id;
	private String descricao;
	private Set<Coleta> coletas = new HashSet<Coleta>(0);

	public CaracRio() {
	}

	public CaracRio(Integer id) {
		this.id = id;
	}

	public CaracRio(Integer id, String descricao,
			Set<Coleta> coletas) {
		this.id = id;
		this.descricao = descricao;
		this.coletas = coletas;
	}

	@GeneratedValue(strategy=GenerationType.IDENTITY)
	@Id
	@Column(name = "idtb_carac_rio", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@Column(name = "descricao", length = 45)
	@NotNull(message = "Campo não pode ser vázio!")
	@NotEmpty(message = "Não pode ser vázio!")
	public String getDescricao() {
		return this.descricao;
	}

	public void setDescricao(String descricao) {
		this.descricao = descricao;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "tb_carac_coleta", schema = "public", joinColumns = { @JoinColumn(name = "tb_carac_rio_id", nullable = false, updatable = false) }, inverseJoinColumns = { @JoinColumn(name = "tb_coleta_id", nullable = false, updatable = false) })
	public Set<Coleta> getColetas() {
		return this.coletas;
	}

	public void setColetas(Set<Coleta> coletas) {
		this.coletas = coletas;
	}
	
	@Override
    public int hashCode() {
        int hash = 0;
        hash += (id != null ? id.hashCode() : 0);
        return hash;
    }

    @Override
    public boolean equals(Object object) {
        // TODO: Warning - this method won't work in the case the id fields are not set
        if (!(object instanceof CaracRio)) {
            return false;
        }
        CaracRio other = (CaracRio) object;
        if ((this.id == null && other.id != null) || (this.id != null && !this.id.equals(other.id))) {
            return false;
        }
        return true;
    }

}
