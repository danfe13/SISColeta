package br.ufs.coleta.SISColeta.entities;

// Generated 02/01/2015 16:46:54 by Hibernate Tools 4.0.0

import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * TbAquatico generated by hbm2java
 */
@Entity
@Table(name = "tb_aquatico", schema = "public")
public class TbAquatico implements GenericEntity {
	private static final long serialVersionUID = 1L;
	
	private Integer id;
	private TbMar tbMar;
	private TbRio tbRio;
	private Set<TbHabitat> tbHabitats = new HashSet<TbHabitat>(0);

	public TbAquatico() {
	}

	public TbAquatico(int id, TbMar tbMar, TbRio tbRio) {
		this.id = id;
		this.tbMar = tbMar;
		this.tbRio = tbRio;
	}

	public TbAquatico(int id, TbMar tbMar, TbRio tbRio,
			Set<TbHabitat> tbHabitats) {
		this.id = id;
		this.tbMar = tbMar;
		this.tbRio = tbRio;
		this.tbHabitats = tbHabitats;
	}

	@Id
	@Column(name = "idtb_aquatico", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "tb_mar_id", nullable = false)
	public TbMar getTbMar() {
		return this.tbMar;
	}

	public void setTbMar(TbMar tbMar) {
		this.tbMar = tbMar;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "tb_rio_id", nullable = false)
	public TbRio getTbRio() {
		return this.tbRio;
	}

	public void setTbRio(TbRio tbRio) {
		this.tbRio = tbRio;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "tbAquatico")
	public Set<TbHabitat> getTbHabitats() {
		return this.tbHabitats;
	}

	public void setTbHabitats(Set<TbHabitat> tbHabitats) {
		this.tbHabitats = tbHabitats;
	}
	
	@Override
    public int hashCode() {
        int hash = 0;
        hash += (id != null ? id.hashCode() : 0);
        return hash;
    }

    @Override
    public boolean equals(Object object) {
        // TODO: Warning - this method won't work in the case the id fields are not set
        if (!(object instanceof TbPerfil)) {
            return false;
        }
        TbAquatico other = (TbAquatico) object;
        if ((this.id == null && other.id != null) || (this.id != null && !this.id.equals(other.id))) {
            return false;
        }
        return true;
    }

}
